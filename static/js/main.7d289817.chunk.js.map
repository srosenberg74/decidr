{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","listContainer","setListContainer","text","onChangeText","placeholder","setPlaceholder","appState","setAppState","itemStyle","textAlign","fontSize","verticalAlign","generateList","map","items","index","style","className","onSubmit","event","trim","length","preventDefault","console","log","type","value","onChange","target","autoFocus","onClick","choice","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,YCkFAA,MA9Ef,WACE,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,mBAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAgCN,mBAAS,WAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA4CR,mBAAS,QAArD,mBAEIS,GAFJ,UAEgB,IACC,WAAbF,IAEFE,EAAY,CACVC,UAAW,SACXC,SAAU,OACVC,cAAe,WAInB,IAAMC,EAAeZ,EAAca,KAAI,SAACC,EAAOC,GAAR,OACrC,8BACE,oBAAIC,MAAOR,EAAX,SAAuBM,KADfC,MA+BZ,OACE,sBAAKE,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sBAAMA,UAAU,cAAhB,sBAEY,YAAbX,GACD,qBAAKW,UAAU,cAAf,SACE,qBAAKA,UAAU,WAAf,SAA2BL,MAGb,WAAbN,GACD,qBAAKW,UAAU,gBAAf,SAA+B,qBAAKA,UAAU,aAAf,SAA6BL,MAE9D,uBAAMM,SAvCM,SAACC,GACXjB,EAAKkB,OAAOC,OAAS,GACvBpB,EAAiB,GAAD,mBAAKD,GAAL,CAAoBE,EAAKkB,UACzCf,EAAe,mBACfF,EAAa,IACbgB,EAAMG,iBACNC,QAAQC,IAAI,iBAAkBxB,KAE9BK,EAAe,iCACfc,EAAMG,mBA8BN,UACE,uBACEG,KAAK,OACLC,MAAOxB,EACPyB,SA9Ba,SAACR,GACpBhB,EAAagB,EAAMS,OAAOF,OAC1BP,EAAMG,kBA6BAlB,YAAaA,EAEbyB,WAAS,IAEX,wBAAQJ,KAAK,SAAb,yBAEF,wBAAQK,QA/BO,WACjB,IAAMC,EACJ/B,EAAcgC,KAAKC,MAAMD,KAAKE,SAAWlC,EAAcqB,SACzDpB,EAAiB,CAAC8B,IAClBxB,EAAY,WA2BV,6BCjES4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d289817.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [listContainer, setListContainer] = useState([]);\n  const [text, onChangeText] = useState(\"\");\n  const [placeholder, setPlaceholder] = useState(\"enter item here\");\n  const [appState, setAppState] = useState(\"initial\");\n  const [revealFontSize, setRevealFontSize] = useState('6rem');\n\n  let itemStyle = {};\n  if (appState === \"reveal\") {\n    \n    itemStyle = {\n      textAlign: \"center\",\n      fontSize: \"6rem\",\n      verticalAlign: \"center\",\n    };\n  }\n\n  const generateList = listContainer.map((items, index) => (\n    <div key={index}>\n      <h3 style={itemStyle}>{items}</h3>\n    </div>\n  ));\n\n  const addItem = (event) => {\n    if (text.trim().length > 0) {\n      setListContainer([...listContainer, text.trim()]);\n      setPlaceholder(\"enter item here\");\n      onChangeText(\"\");\n      event.preventDefault();\n      console.log(\"listContainer=\", listContainer);\n    } else {\n      setPlaceholder(\"Invalid entry. Item was blank\");\n      event.preventDefault();\n    }\n  };\n\n  const handleChange = (event) => {\n    onChangeText(event.target.value);\n    event.preventDefault();\n    // console.log(\"changeText=\", text);\n  };\n\n  const chooseItem = () => {\n    const choice =\n      listContainer[Math.floor(Math.random() * listContainer.length)];\n    setListContainer([choice]);\n    setAppState(\"reveal\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <span className=\"header-text\">Decidr</span>\n      </header>\n      {appState === \"initial\" && (\n      <div className=\"list-parent\">\n        <div className=\"list-div\">{generateList}</div>\n          </div>\n        )}\n        {appState === \"reveal\" &&  (\n        <div className=\"reveal-parent\"><div className=\"reveal-div\">{generateList}</div></div>)}\n      \n      <form onSubmit={addItem}>\n        <input\n          type=\"text\"\n          value={text}\n          onChange={handleChange}\n          placeholder={placeholder}\n          // placeholder=\"enter item here\"\n          autoFocus\n        ></input>\n        <button type=\"submit\">Add Item</button>\n      </form>\n      <button onClick={chooseItem}>Select Item</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}