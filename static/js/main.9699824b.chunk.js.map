{"version":3,"sources":["components/AddItem.js","components/DisplayList.js","App.js","index.js"],"names":["AddItem","listContainer","setListContainer","setPlaceholder","setAppState","placeholder","useState","text","onChangeText","onSubmit","event","trim","length","cleanedInput","toLowerCase","find","entry","preventDefault","type","value","onChange","target","autoFocus","className","DisplayList","itemStyle","appState","animNumber","generateList","map","items","index","onClick","filter","i","deleteItem","style","toString","App","revealFontSize","setRevealFontSize","lastGroup","setLastGroup","selectedItem","setSelectedItem","setAnimNumber","animatedList","setAnimatedList","viewWidth","setViewWidth","lastAnim","setLastAnim","useEffect","window","innerWidth","textAlign","fontSize","verticalAlign","margin","alignSelf","chooseAnim","anim","Math","floor","random","resetReveal","marginBottom","fontStyle","choice","chooseItem","chooseAgainWith","item","updatedGroup","chooseAgainWithout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9699824b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\n\nfunction AddItem({\n  listContainer,\n  setListContainer,\n  setPlaceholder,\n  setAppState,\n  placeholder,\n}) {\n  const [text, onChangeText] = useState(\"\");\n\n  const addItem = (event) => {\n    if (text.trim().length > 0) {\n      const cleanedInput = text.trim().toLowerCase();\n      if (\n        listContainer.find(\n          (entry) => entry.trim().toLowerCase() === cleanedInput\n        )\n      ) {\n        setPlaceholder(\"This is a duplicate entry\");\n        onChangeText(\"\");\n        event.preventDefault();\n        setAppState(\"initial\");\n      } else {\n        setListContainer([...listContainer, text.trim()]);\n        setPlaceholder(\"enter item here\");\n        onChangeText(\"\");\n        event.preventDefault();\n        setAppState(\"initial\");\n        setPlaceholder(\"enter item here\");\n      }\n    } else {\n      setPlaceholder(\"Invalid entry. Item was blank\");\n      event.preventDefault();\n    }\n  };\n\n  const handleChange = (event) => {\n    onChangeText(event.target.value);\n    event.preventDefault();\n  };\n\n  return (\n    <form onSubmit={addItem}>\n      <input\n        type=\"text\"\n        value={text}\n        onChange={handleChange}\n        placeholder={placeholder}\n        autoFocus\n      ></input>\n      <button className=\"button-style\" type=\"submit\">\n        Add Item\n      </button>\n    </form>\n  );\n}\n\nexport default AddItem;\n","import React from 'react'\n\nfunction DisplayList({setListContainer, listContainer, itemStyle, appState, animNumber}) {\n\n    const deleteItem = (index) =>\n    setListContainer(listContainer.filter((value, i) => i !== index));\n\n    const generateList = listContainer.map((items, index) => (\n        <div key={index}>\n          {appState === \"initial\" && (\n            <button className=\"item-holder\" onClick={() => deleteItem(index)}>\n              <h3 style={itemStyle}>{items}</h3>\n            </button>\n          )}\n          {appState === \"reveal\" && (\n            <div className={`reveal-holder reveal-${animNumber.toString()}`}>\n              <h3 style={itemStyle}>{items}</h3>\n            </div>\n          )}\n        </div>\n      ));\n\n    return (\n        <div className=\"list-div\">{generateList}</div>\n    )\n}\n\nexport default DisplayList\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport AddItem from \"./components/AddItem\";\nimport DisplayList from \"./components/DisplayList\";\n\nfunction App() {\n  const [listContainer, setListContainer] = useState([]);\n  const [placeholder, setPlaceholder] = useState(\"enter item here\");\n  const [appState, setAppState] = useState(\"initial\");\n  const [revealFontSize, setRevealFontSize] = useState(\"2.4rem\");\n  const [lastGroup, setLastGroup] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(\"\");\n  const [animNumber, setAnimNumber] = useState(1);\n  const [animatedList, setAnimatedList] = useState(\n    `reveal-div reveal-${animNumber.toString()}`\n  );\n  const [viewWidth, setViewWidth] = useState(0);\n  const [lastAnim, setLastAnim] = useState(0);\n\n  useEffect(() => {\n    setViewWidth(window.innerWidth);\n    if (viewWidth > 700) {\n      setRevealFontSize(\"6rem\");\n      if (viewWidth < 1000 && selectedItem.length > 7) {\n        setRevealFontSize(\"4rem\");\n      } else if (selectedItem.length > 9) {\n        setRevealFontSize(\"3rem\");\n      } else if (selectedItem.length < 5) {\n        setRevealFontSize(\"9rem\");\n      }\n    } else {\n      if (selectedItem.length > 7) {\n        setRevealFontSize(\"1.4rem\");\n      } else {\n        setRevealFontSize(\"2.4rem\");\n      }\n    }\n  }, [viewWidth, selectedItem, appState]);\n\n  let itemStyle = {};\n  if (appState === \"reveal\") {\n    itemStyle = {\n      textAlign: \"center\",\n      fontSize: revealFontSize,\n      verticalAlign: \"center\",\n      margin: \"auto\",\n      alignSelf: \"center\",\n    };\n  }\n\n  const chooseAnim = () => {\n    // hard-coded number of animations in next line\n    let anim = Math.floor(Math.random() * 11) + 1;\n    if (anim === lastAnim) {\n      chooseAnim();\n    }\n    setAnimNumber(anim);\n    setLastAnim(anim);\n  };\n\n  const chooseItem = () => {\n    chooseAnim();\n    setLastGroup(listContainer);\n    const choice =\n      listContainer[Math.floor(Math.random() * listContainer.length)];\n    setListContainer([choice]);\n    setSelectedItem(choice);\n    setAppState(\"reveal\");\n    setPlaceholder(\"The decision has been made!\");\n  };\n\n  const resetReveal = () => {\n    chooseAnim();\n    setAppState(\"initial\");\n    setAppState(\"reveal\");\n    setAnimatedList(\"reveal-div reveal-\" + animNumber.toString());\n  };\n\n  const chooseAgainWith = () => {\n    chooseAnim();\n    const choice = lastGroup[Math.floor(Math.random() * lastGroup.length)];\n    setListContainer([choice]);\n    setSelectedItem(choice);\n    setAnimatedList(\"reveal-div reveal-\" + animNumber.toString());\n    resetReveal();\n  };\n\n  const chooseAgainWithout = () => {\n    chooseAnim();\n    // *** this next line should be lastGroup.length < 1, app is behaving incorrectly, need to find bug, unless it is just because of delay in state updating\n    if (lastGroup.length < 2) {\n      setListContainer([\"list is empty\"]);\n      return;\n    }\n    let updatedGroup = lastGroup.filter((item) => item !== selectedItem);\n    const choice =\n      updatedGroup[Math.floor(Math.random() * updatedGroup.length)];\n    setListContainer([choice]);\n    setSelectedItem(choice);\n    setLastGroup(updatedGroup);\n    setAnimatedList(\"reveal-div reveal-\" + animNumber.toString());\n    resetReveal();\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <span className=\"header-text\">Decidr</span>\n      </header>\n      {appState === \"initial\" && (\n        <div className=\"list-parent\">\n          {listContainer.length === 0 && (\n            <>\n              <p>Let me help you choose!</p>\n              <p style={{ margin: \".4rem\" }}>\n                Please enter at least two items to select from\n              </p>\n            </>\n          )}\n          <DisplayList\n            setListContainer={setListContainer}\n            listContainer={listContainer}\n            itemStyle={itemStyle}\n            appState={appState}\n            animNumber={animNumber}\n          />\n          {listContainer.length === 1 && (\n            <div style={{ margin: \"1.2rem\", marginBottom: \"2.4rem\" }}>\n              <p style={{ marginBottom: \".3rem\" }}>\n                Enter at least one more item to choose from.\n              </p>\n              <p style={{ fontStyle: \"italic\", fontSize: \".9rem\" }}>\n                Click on any item to delete it\n              </p>\n            </div>\n          )}\n          {listContainer.length > 1 && (\n            <p className=\"delete-message\">Click on any item to delete it</p>\n          )}\n        </div>\n      )}\n      {appState === \"reveal\" && (\n        <div className=\"reveal-parent\">\n          <div className={animatedList}>\n            {\" \"}\n            <div className={`reveal-holder reveal-${animNumber.toString()}`}>\n              <h3 style={itemStyle}>{listContainer}</h3>\n            </div>\n          </div>\n        </div>\n      )}\n      <AddItem\n        listContainer={listContainer}\n        setListContainer={setListContainer}\n        placeholder={placeholder}\n        setPlaceholder={setPlaceholder}\n        setAppState={setAppState}\n      />\n      {listContainer.length > 1 && appState === \"initial\" && (\n        <>\n          <button\n            className=\"button-style\"\n            onClick={() => {\n              chooseAnim();\n              chooseItem();\n            }}\n          >\n            Select Item\n          </button>\n          <button\n            className=\"button-style\"\n            onClick={() => {\n              setListContainer([]);\n            }}\n          >\n            Clear List\n          </button>\n        </>\n      )}\n      {appState === \"reveal\" && listContainer[0] !== \"list is empty\" && (\n        <div>\n          <button\n            className=\"button-style\"\n            onClick={() => {\n              chooseAnim();\n              setAnimatedList(\"reveal-div reveal-\" + animNumber.toString());\n              setListContainer(lastGroup);\n              chooseAgainWith();\n            }}\n          >\n            Choose again with {listContainer}\n          </button>\n          <button\n            className=\"button-style\"\n            onClick={() => {\n              setListContainer(\n                lastGroup.filter((item) => item !== selectedItem)\n              );\n              chooseAgainWithout();\n              setAnimatedList(\"reveal-div reveal-\" + animNumber.toString());\n            }}\n          >\n            Choose again without {listContainer}\n          </button>\n        </div>\n      )}\n      {appState === \"reveal\" && (\n        <button\n          className=\"button-style\"\n          onClick={() => {\n            setAppState(\"initial\");\n            setListContainer([]);\n            setPlaceholder(\"enter item here\");\n          }}\n        >\n          Start Over\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}